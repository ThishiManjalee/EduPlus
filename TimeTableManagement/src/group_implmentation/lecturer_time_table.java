/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package group_implmentation;

import actions.MultipleLine;
import actions.MyTableModel;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.MessageFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.TableModel;

/**
 *
 * @author pasindu
 */
public final class lecturer_time_table extends javax.swing.JFrame {

    /**
     * Creates new form lecturer_time_table
     */
    public lecturer_time_table() {
        initComponents();
              //Hide Size Function Implement
        hidesize();
        lecturer_timetable.setShowGrid(true);

        lecturercombox();

 
        //jtable column width set methode call
        jtableColumnWidth();

    }

    void hidesize() {

        setSize(1400, 820);
        setLocationRelativeTo(null);
        setResizable(false); // maximize button disable
        setVisible(true);

    }

    //Cretae jtable Column Width Any Sizes
    void jtableColumnWidth() {

        lecturer_timetable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        lecturer_timetable.getColumnModel().getColumn(0).setPreferredWidth(250);
        lecturer_timetable.getColumnModel().getColumn(1).setPreferredWidth(250);
        lecturer_timetable.getColumnModel().getColumn(2).setPreferredWidth(250);
        lecturer_timetable.getColumnModel().getColumn(3).setPreferredWidth(250);
        lecturer_timetable.getColumnModel().getColumn(4).setPreferredWidth(250);
        lecturer_timetable.getColumnModel().getColumn(5).setPreferredWidth(250);
        lecturer_timetable.getColumnModel().getColumn(6).setPreferredWidth(250);
        lecturer_timetable.getColumnModel().getColumn(7).setPreferredWidth(250);
        lecturer_timetable.getColumnModel().getColumn(8).setPreferredWidth(250);
        lecturer_timetable.getColumnModel().getColumn(9).setPreferredWidth(250);

    }

    //Retive All the Lecturer1 Data to Combobox
    void lecturercombox() {
        // TODO add your handling code here:
        try {
            Connection cn = connection.DB_Connect.ConnecrDB();
            // Connection cn=timetablemanagement.DB_Connect.connect();

            String sql = "select DISTINCT name from lecturer";
            Statement pst = cn.createStatement();
            ResultSet rs = pst.executeQuery(sql);
            while (rs.next()) {

                String name = rs.getString("name");
                jComboBoxLecturer.addItem(name);

            }
            //Connection Close
            pst.close();
            rs.close();
            cn.close();

        } catch (SQLException ex) {
            Logger.getLogger(lecturer_time_table.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxLecturer = new javax.swing.JComboBox<>();
        jButtonGen = new javax.swing.JButton();
        JButtonPrint = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lecturer_timetable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        DashboardClick = new javax.swing.JButton();
        LecturerTimetableClick = new javax.swing.JButton();
        StudentTimetableClick = new javax.swing.JButton();
        LocationTimetableclick = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pasindu_img/logo.jpeg"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel3.setText("Lecturer");

        jButtonGen.setBackground(new java.awt.Color(0, 153, 153));
        jButtonGen.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jButtonGen.setText("Generate");
        jButtonGen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGenActionPerformed(evt);
            }
        });

        JButtonPrint.setBackground(new java.awt.Color(0, 153, 153));
        JButtonPrint.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        JButtonPrint.setText("Print");
        JButtonPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JButtonPrintActionPerformed(evt);
            }
        });

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        lecturer_timetable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Time Slots", "Monday", "Tuesday", "Wensday", "Thursday", "Friday", "Saturday", "Sunday"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        lecturer_timetable.setGridColor(new java.awt.Color(51, 153, 255));
        lecturer_timetable.setRowHeight(60);
        jScrollPane1.setViewportView(lecturer_timetable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxLecturer, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(jButtonGen, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(JButtonPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonGen, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBoxLecturer, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(JButtonPrint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel2.setBackground(new java.awt.Color(204, 255, 0));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 153, 153));
        jLabel2.setText("Lecturer Timetable");

        DashboardClick.setBackground(new java.awt.Color(0, 153, 153));
        DashboardClick.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        DashboardClick.setText("Dashboard");
        DashboardClick.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DashboardClickActionPerformed(evt);
            }
        });

        LecturerTimetableClick.setBackground(new java.awt.Color(0, 153, 153));
        LecturerTimetableClick.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        LecturerTimetableClick.setText("Lecturer Timetable");

        StudentTimetableClick.setBackground(new java.awt.Color(0, 153, 153));
        StudentTimetableClick.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        StudentTimetableClick.setText("Student Timetable");
        StudentTimetableClick.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudentTimetableClickActionPerformed(evt);
            }
        });

        LocationTimetableclick.setBackground(new java.awt.Color(0, 153, 153));
        LocationTimetableclick.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        LocationTimetableclick.setText("Location Timetable");
        LocationTimetableclick.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LocationTimetableclickActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(LocationTimetableclick, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                            .addComponent(StudentTimetableClick, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(LecturerTimetableClick, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                            .addComponent(DashboardClick, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 468, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(DashboardClick, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(LecturerTimetableClick, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(StudentTimetableClick, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(LocationTimetableclick, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DashboardClickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DashboardClickActionPerformed
        // TODO add your handling code here:

        group_implmentation.loging.dashb.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_DashboardClickActionPerformed
    student_time_table ll3;
    private void StudentTimetableClickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StudentTimetableClickActionPerformed
        // TODO add your handling code here:

        if (ll3 == null) {
            ll3 = new student_time_table();
        }

        ll3.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_StudentTimetableClickActionPerformed
    location_time_table ll4;
    private void LocationTimetableclickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LocationTimetableclickActionPerformed
        // TODO add your handling code here:
        if (ll4 == null) {
            ll4 = new location_time_table();
        }

        ll4.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_LocationTimetableclickActionPerformed

    private void JButtonPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JButtonPrintActionPerformed
        // TODO add your handling code here:
        MessageFormat header = new MessageFormat("Report Print");
        MessageFormat footer = new MessageFormat("Page{0,number,integer}");

        try {

            lecturer_timetable.print(JTable.PrintMode.NORMAL, header, footer);

        } catch (java.awt.print.PrinterException e) {

            System.err.format("cannot print %s%n", e.getMessage());

        }


    }//GEN-LAST:event_JButtonPrintActionPerformed

    private void jButtonGenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGenActionPerformed

       TableModel df =  lecturer_timetable.getModel();

        for (int i = 0; i < df.getRowCount(); i++) {

            for (int j = 1; j < df.getColumnCount(); j++) {

                df.setValueAt("", i, j);

            }

        }
        df.setValueAt("08:30-09:30", 0, 0);
        df.setValueAt("09:30-10:30", 1, 0);
        df.setValueAt("10:30-11:30", 2, 0);
        df.setValueAt("11:30-12:30", 3, 0);
        df.setValueAt("12:30-13:30", 4, 0);
        df.setValueAt("13:30-14:30", 5, 0);
        df.setValueAt("14:30-15:30", 6, 0);
        df.setValueAt("15:30-16:30", 7, 0);
        df.setValueAt("16:30-17:30", 8, 0);
        df.setValueAt("17:30-18:30", 9, 0);
        df.setValueAt("19:30-20:30", 10, 0);


        Connection cn = connection.DB_Connect.ConnecrDB();

        String td[][];
        Object col[] = {"Time Slots", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"};

        td = new String[11][11];
        for (int i = 0; i < df.getRowCount(); i++) {
            td[i][0] = df.getValueAt(i, 0).toString();
        }

        try {
            String sql = "select * from session where ((lec1 = ? )||(lec2 =?)) ";
            PreparedStatement pst = cn.prepareStatement(sql);

            String ch = jComboBoxLecturer.getSelectedItem().toString();

            pst.setString(1, ch);
            pst.setString(2, ch);

            ResultSet rs = pst.executeQuery();

            while (rs.next()) {
                //Data will be added until finish
                String se_id = String.valueOf(rs.getInt("se_id"));
                String lec1 = rs.getString("lec1");
                String lec2 = rs.getString("lec2");
                String tag = rs.getString("tag");
                String sgroup = rs.getString("sgroup");
                String scode = rs.getString("scode");
                String ssubject = rs.getString("ssubject");
                String nostu = rs.getString("nostu");
                String hrs = rs.getString("hrs");
                String min = rs.getString("min");
                String day = rs.getString("day");
                String shrs = rs.getString("shrs");
                String smin = rs.getString("smin");
                String ehrs = rs.getString("ehrs");
                String emin = rs.getString("emin");
                String room = rs.getString("roomname");

                String session = String.join("-", lec1, lec2, scode, tag, sgroup, nostu, se_id,room);

                int Hrs = Integer.parseInt(shrs);
                int EHrs = Integer.parseInt(ehrs);  // ----------------------------- kaapiya maawa
                int db_start = (Hrs * 60) + Integer.parseInt(smin);
                int db_end = (EHrs * 60) + Integer.parseInt(emin);

                for (int i = 0; i < df.getRowCount(); i++) {

                    String Start_Time = df.getValueAt(i, 0).toString().split("-")[0];
                    String End_Time = df.getValueAt(i, 0).toString().split("-")[1];

                    int Start_Value = (Integer.parseInt(Start_Time.split(":")[0]) * 60) + Integer.parseInt(Start_Time.split(":")[1]);
                    int End_Value = (Integer.parseInt(End_Time.split(":")[0]) * 60) + Integer.parseInt(End_Time.split(":")[1]);

                    if ((Start_Value <= db_start && End_Value > db_start) || (End_Value <= db_end && End_Value > db_start)) {

                        for (int j = 1; j < df.getColumnCount(); j++) {

                            if (day.equals(df.getColumnName(j))) {

//                                df.setValueAt(session, i, j);
                                td[i][j] = session.replaceAll("-", " - ");
                                //
//                                break;
                            } else {

                                td[i][j] = " ";
                            }

                        }
                    }

                }

            }
            
            
           lecturer_timetable.setModel(new MyTableModel(td, col));
           lecturer_timetable.setDefaultRenderer(Object.class, new MultipleLine());
           lecturer_timetable.setShowHorizontalLines(true);
           lecturer_timetable.setShowVerticalLines(true);
           lecturer_timetable.setAutoResizeMode(1);
           lecturer_timetable.setRowHeight(90);
            JOptionPane.showMessageDialog(null, "Generate Success");

//           lecturer_timetable.setc
        } catch (SQLException e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(this, e);

        }

//        timetable();
    }//GEN-LAST:event_jButtonGenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(lecturer_time_table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(lecturer_time_table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(lecturer_time_table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(lecturer_time_table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new lecturer_time_table().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DashboardClick;
    private javax.swing.JButton JButtonPrint;
    private javax.swing.JButton LecturerTimetableClick;
    private javax.swing.JButton LocationTimetableclick;
    private javax.swing.JButton StudentTimetableClick;
    private javax.swing.JButton jButtonGen;
    private javax.swing.JComboBox<String> jComboBoxLecturer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable lecturer_timetable;
    // End of variables declaration//GEN-END:variables
}
